#!/bin/sh
#
# Accepts the command ($1) and the build ($2)
# The command must be "kickoff", "nextport", or "stop"
# The kickoff option will:
#    - delete ${BULKTMP}/bulk_${BUILD}.active
#    - delete ${BULKTMP}/bulk_${BUILD}.processed
#    - delete ${BULKTMP}/bulk_${BUILD}.requested
#    - create or recreate ${BULKTMP}/bulk_${BUILD}.queue
#    - execute "nextport" option
# The nextport option is called only if kickoff was stopped before.
#   If there is no ${BULKTMP}/build_${BUILD}.active file, it will create one
#   with the top line of the queue file, and add that port to tinderbox queue.
# The stop option will delete the ${BULKTMP}/build_${BUILD}.active file which
#   will prevent additional ports from being added to the queue.  The
#   previously added port will continue to build along with all it's
#   dependencies though.
#

PB=@TINROOT@
BULKTMP=/tmp

exitusage()
{
  echo "Usage: buildbuild.sh <kickoff|stop|nextport> <build>"
  exit
}

buildNF()
{
  echo "The build '${1}' was not found in the database."
  exit
}

portstreeNF()
{
  echo "The portstree was not found.  It was expected to be here:"
  echo "${PB}/portstrees/${1}"
  exit
}

option_stop()
{
  rm -f ${BULKTMP}/bulk_${1}.active
}

option_nextport()
{
  if [ -f ${BULKTMP}/bulk_${1}.active ]; then
    echo "There is an active bulk build in work right now, command ignored."
    exit
  fi
  NEXTPORT=`head -n 1 ${BULKTMP}/bulk_${1}.queue`
  echo ${NEXTPORT}  > ${BULKTMP}/bulk_${1}.active
  echo ${NEXTPORT} >> ${BULKTMP}/bulk_${1}.requested
  ${PB}/scripts/tc addBuildPortsQueueEntry -b ${1} -d ${NEXTPORT} -p 9
}

option_kickoff()
{
  rm -f ${BULKTMP}/bulk_${1}.active
  rm -f ${BULKTMP}/bulk_${1}.processed
  rm -f ${BULKTMP}/bulk_${1}.requested

  cd ${PB}/portstrees/${2}/pkgsrc
  /usr/bin/find -s * -type d -maxdepth 1 -depth 1 > ${BULKTMP}/bulk_${1}.queue
  option_nextport ${1}
}

[ $# -ne 2 ] && exitusage;

BUILD=`${PB}/scripts/tc listBuilds | grep ^$2\$`
[ -z "${BUILD}" ] && buildNF $2;

PTREE=`${PB}/scripts/tc getPortsTreeForBuild -b $2`
[ ! -d ${PB}/portstrees/${PTREE} ] && portstreeNF ${PTREE};


case "$1" in
'kickoff')
        option_kickoff ${BUILD} ${PTREE}
        ;;
'stop')
        option_stop ${BUILD}
        ;;
'nextport')
        option_nextport ${BUILD}
        ;;
*)
        exitusage
        ;;
esac
