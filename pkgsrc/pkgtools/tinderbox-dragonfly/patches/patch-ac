$NetBSD$

--- ../FreeBSD/lib/tinderlib.sh	2011-10-16 00:52:55.000000000 +0000
+++ lib/tinderlib.sh
@@ -50,10 +50,10 @@ tinderLoc () {
 			fi
 			;;
     "builddata")	echo "${pb}/builds/${what}";;
-    "buildports")	echo "$(tinderLoc buildroot ${what})/a/ports";;
+    "buildports")	echo "$(tinderLoc buildroot ${what})/a/pkgsrc";;
     "buildsrc")		echo "$(tinderLoc buildroot ${what})/usr/src";;
     "buildccache")	echo "$(tinderLoc buildroot ${what})/ccache";;
-    "buildoptions")	echo "$(tinderLoc buildroot ${what})/var/db/ports";;
+    "buildoptions")	echo "$(tinderLoc buildroot ${what})/var/db/pkg";;
     "builddistcache")	echo "$(tinderLoc buildroot ${what})/distcache";;
     "builderrors")	echo "${pb}/errors/${what}";;
     "buildlogs")	echo "${pb}/logs/${what}";;
@@ -197,7 +197,7 @@ cleanupMounts () {
 	    echo "cleanupMounts: ${_type}: missing portstree"
 	    return 1
 	fi
-	_dstloc=${_dstloc:-$(tinderLoc portstree ${_portstree})/ports}
+	_dstloc=${_dstloc:-$(tinderLoc portstree ${_portstree})/pkgsrc}
 	;;
 
     *)
@@ -267,7 +267,7 @@ requestMount () {
 	if [ -z "${_srcloc}" ] ; then
 	    _srcloc=$(${tc} getPortsMount -p ${_portstree})
 	    if [ -z "${_srcloc}" ] ; then
-		_srcloc=${_srcloc:=$(tinderLoc portstree ${_portstree})/ports}
+		_srcloc=${_srcloc:=$(tinderLoc portstree ${_portstree})/pkgsrc}
 	    else
 		_fqsrcloc=1
 	    fi
@@ -332,7 +332,7 @@ requestMount () {
 	    echo "requestMount: ${_type}: missing portstree"
 	    return 1
 	fi
-	_dstloc=${_dstloc:-$(tinderLoc portstree ${_portstree})/ports}
+	_dstloc=${_dstloc:-$(tinderLoc portstree ${_portstree})/pkgsrc}
 	_srcloc=${_srcloc:-$(${tc} getPortsMount -p ${_portstree})}
 	_fqsrcloc=1
 	;;
@@ -355,8 +355,10 @@ requestMount () {
     fi
 
     # is the filesystem already mounted?
-    fsys=$(df ${_dstloc} 2>/dev/null | awk '{a=$1}  END {print a}')
-    mtpt=$(df ${_dstloc} 2>/dev/null | awk '{a=$NF} END {print a}')
+    # We can't use df $_dstloc directly because HAMMER returns the
+    # PFS address rather than the source location like UFS does
+    fsys=$(df | grep '^${_dstloc}' | awk '{a=$1}  END {print a}')
+    mtpt=$(df | grep '^${_dstloc}' | awk '{a=$NF} END {print a}')
 
     if [ "${fsys}" = "${_srcloc}" -a "${mtpt}" = "${_dstloc}" ]; then
 	return 0
@@ -364,10 +366,9 @@ requestMount () {
 
     # is _nullfs mount specified?
     if [ ${_nullfs} -eq 1 -a ${_fqsrcloc} -ne 1 ] ; then
-	_options="-t nullfs"
+	_options="-t null"
     else
-	# it probably has to be a nfs mount then
-	# lets check what kind of _srcloc we have. If it is allready in
+	# lets check what kind of _srcloc we have. If it is already in
 	# a nfs format, we don't need to adjust anything
 	case ${_srcloc} in
 
@@ -382,34 +383,43 @@ requestMount () {
 		    # The user wants exactly what he specified as _srcloc
 		    # don't modify anything. If it's not a nfs mount, it has
 		    # to be a nullfs mount.
-		    _options="-t nullfs"
+		    _options="-t null"
 		else
-		    _options="-o nfsv3,intr,tcp"
+		    # First check the requested source is located on a HAMMER
+		    # Pseudo File System.  If it is, we must use a null mount
+		    # as NFS can't directly mount HAMMER.
 
 		    # find out the filesystem the requested source is in
-		    fsys=$(df ${_srcloc} | awk '{a=$1}  END {print a}')
-		    mtpt=$(df ${_srcloc} | awk '{a=$NF} END {print a}')
-		    # determine if the filesystem the requested source
-		    # is a nfs mount, or a local filesystem
-
-		    case ${fsys} in
-
-		    [a-zA-Z0-9\.-_]*:/*)
-			# maybe our destination is a subdirectory of the
-			# mountpoint and not the mountpoint itself.
-			# if that is the case, add the subdir to the mountpoint
-			_srcloc="${fsys}/$(echo $_srcloc | \
-					sed 's|'${mtpt}'||')"
-			;;
-
-		    *)
-			# not a nfs mount, nullfs not specified, so
-			# mount it as nfs from localhost
-			_srcloc="localhost:/${_srcloc}"
-			;;
-
-		    esac
+		    fsys=$(df | grep '^${_srcloc}' | awk '{a=$1}  END {print a}')
+		    mtpt=$(df | grep '^${_srcloc}' | awk '{a=$NF} END {print a}')
 
+		    SNAPLS=`/sbin/hammer snapls ${fsys} 2>/dev/null`
+		    if [ "$SNAPLS" = "" ]; then
+			# this is probably a UFS filesystem, so attempt NFS
+			_options="-o nfsv3,intr,tcp"
+
+			# determine if the filesystem the requested source
+			# specifies an NFS server or a local filesystem
+			case ${fsys} in
+
+			[a-zA-Z0-9\.-_]*:/*)
+			    # maybe our destination is a subdirectory of the
+			    # mountpoint and not the mountpoint itself.
+			    # if that is the case, add the subdir to the mountpoint
+			    _srcloc="${fsys}/$(echo $_srcloc | sed 's|'${mtpt}'||')"
+			    ;;
+
+			*)
+			    # not a nfs mount, nullfs not specified, so
+			    # mount it as nfs from localhost
+			    _srcloc="localhost:/${_srcloc}"
+			    ;;
+
+			esac
+		    else
+			# HAMMER Filesystem require mount_null
+			_options="-t null"
+		    fi
 		fi
 		;;
 	esac
@@ -629,7 +639,7 @@ checkPreReqs () {
     missing=""
 
     for r in ${reqs} ; do
-	if [ -z $(pkg_info -Q -O ${r}) ]; then
+	if [ -z $(pkg_info -e ${r}) ]; then
 	    missing="${missing} ${r}"
 	    error=1
 	fi
