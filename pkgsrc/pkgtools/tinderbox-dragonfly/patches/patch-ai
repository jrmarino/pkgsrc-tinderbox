$NetBSD$

--- ../FreeBSD/lib/portbuild	2011-10-16 00:52:55.000000000 +0000
+++ lib/portbuild
@@ -5,7 +5,7 @@
 . ${pb}/scripts/lib/tinderlib.sh
 
 usage () {
-    echo "usage: $0 <build name> <jail name> <portstree name> [-noclean] [-plistcheck] [-nullfs] [-fetch-original] [-nolog] ED PD FD BD RD TD pkgname dirname"
+    echo "usage: $0 <build name> <jail name> <portstree name> [-noclean] [-plistcheck] [-nullfs] [-fetch-original] [-nolog] ED PD FD BD RD TD SD pkgname dirname"
     exit 1
 }
 
@@ -19,7 +19,9 @@ cleanup()
     build=$6
     nullfs=$7
 
-    umount ${chroot}/compat/linux/proc >/dev/null
+    if [ ${ARCH} = "i386" ]; then 
+	umount ${chroot}/compat/linux/proc >/dev/null
+    fi
     umount ${chroot}/proc >/dev/null
 
     if [ $noclean -eq 0 ]; then
@@ -31,9 +33,6 @@ cleanup()
 	    rm -rf ${chroot}/tmp/*
 
 	    chroot ${chroot} /sbin/ldconfig -R
-	    if [ ${ARCH} = "i386" ]; then
-	        chroot ${chroot} /sbin/ldconfig -aout -R
-	    fi
 	else
 	    ${tc} resetBuild -b ${build} ${nullfs}
 	fi
@@ -56,7 +55,12 @@ mark_failed() {
 	return
     fi
 
-    dependents=$(grep ${pkgname} ${mf} | grep '^[[:space:]]\{1,\}@' | awk '{print $NF}' | sed -e 's|^/usr/ports/||' | grep -v ${portdir})
+    dependents=$(grep ${pkgname} ${mf} | \
+    	grep '^[[:space:]]\{1,\}@' | \
+    	awk '{print $NF}' | \
+    	sed -e 's|^/usr/pkgsrc/||' | \
+    	sed -e 's|^../../||' | \
+    	grep -v ${portdir})
     if [ $? -ne 0 ]; then
 	return
     fi
@@ -142,8 +146,9 @@ FD=$3
 BD=$4
 RD=$5
 TD=$6
-pkgname=$(basename $7 ${PKGSUFFIX})
-dirname=$8
+SD=$7
+pkgname=$(basename $8 ${PKGSUFFIX})
+dirname=$9
 
 echo ${pkgname}
 echo ${dirname}
@@ -151,7 +156,7 @@ echo ${dirname}
 tc=$(tinderLoc scripts tc)
 chroot=$(tinderLoc buildroot ${build})
 echo "chroot is: ${chroot}"
-portdir=$(echo ${dirname} | sed -e 's|^/usr/ports/||')
+portdir=$(echo ${dirname} | sed -e 's|^/usr/pkgsrc/||')
 
 total_size=$(${tc} getPortTotalSize -d ${portdir} -b ${build})
 execute_hook "prePortBuild" "PACKAGE_NAME=${pkgname} BUILD=${build} JAIL=${jail} PORTSTREE=${portstree} CHROOT=${chroot} PORTDIR=${portdir} PB=${pb} TOTAL_SIZE=${total_size}"
@@ -175,12 +180,12 @@ if [ -f ${dudsfile} ]; then
 fi
 
 # directories to clean
+# These are created/recreated after blowing the directories away
 cleandirs="${LOCALBASE} /compat /var/db/pkg"
 
 for dir in ${cleandirs}; do
     cleanDirs ${build} ${chroot}${dir}
 done
-rm -rf ${chroot}/var/db/pkg/*
 
 # reset mtrees for plist checking
 mtree -deU -f ${chroot}/etc/mtree/BSD.root.dist \
@@ -190,17 +195,29 @@ mtree -deU -f ${chroot}/etc/mtree/BSD.va
 mtree -deU -f ${chroot}/etc/mtree/BSD.usr.dist \
       -p ${chroot}/usr >/dev/null 2>&1
 
-mkdir -p ${chroot}${LOCALBASE}
-if [ -f ${chroot}/a/ports/Templates/BSD.local.dist ]; then
-    mtree -deU -f ${chroot}/a/ports/Templates/BSD.local.dist -p ${chroot}${LOCALBASE} \
+if [ -f ${chroot}/a/pkgsrc/Templates/BSD.local.dist ]; then
+    mtree -deU -f ${chroot}/a/pkgsrc/Templates/BSD.local.dist -p ${chroot}${LOCALBASE} \
     	>/dev/null 2>&1
 else
     mtree -deU -f ${chroot}/etc/mtree/BSD.local.dist -p ${chroot}${LOCALBASE} \
     	>/dev/null 2>&1
 fi
 
-# mount linprocfs if required
-if [ "${ARCH}" = "i386" -o "${ARCH}" = "amd64" ]; then
+# pkgsrc is "helpful" that it removes directories that result empty after
+# as the plist removes files of a package.  This includes standard mtree
+# directories such as man/man1, so we need to touch a file in every directory
+# of pkgsrc to prevent this side-effect which often fails the fs state check.
+
+find ${chroot}${LOCALBASE}/ -type d -exec touch {}/.keep \;
+
+# copy over pkgsrc bootstrap tools, ${LOCALBASE}/bin & /etc exist now
+cp    ${chroot}/usr/4bootstrap/bmake   ${chroot}${LOCALBASE}/bin/
+cp    ${chroot}/usr/4bootstrap/pkg_*   ${chroot}${LOCALBASE}/sbin/
+cp    ${chroot}/usr/4bootstrap/mk.conf ${chroot}${LOCALBASE}/etc/
+cp -R ${chroot}/usr/4bootstrap/mk      ${chroot}${LOCALBASE}/share/
+
+# mount linprocfs if available
+if [ ${ARCH} = "i386" ]; then 
     mkdir -p ${chroot}/compat/linux/proc
     mount -t linprocfs linprocfs ${chroot}/compat/linux/proc
 fi
@@ -251,8 +268,10 @@ if [ x"${CCACHE_ENABLED}" = x"1" ]; then
     export PATH=/opt:${PATH}
 fi
 
-if [ x"${OPTIONS_ENABLED}" = x"1" ]; then
-    export PORT_DBDIR=/var/db/ports
+export PKG_OPTIONS_FILE=
+original_options=$(tinderLoc options ${build})/pkg_options
+if [ x"${OPTIONS_ENABLED}" = x"1" -a -f ${original_options} ]; then
+    export PKG_OPTIONS_FILE=/var/db/options/pkg_options
 fi
 
 echo "building $pkgname in $chroot"
@@ -264,11 +283,7 @@ packages=$(tinderLoc packages ${build})
 major_version=$(echo ${jail} | sed -E -e 's|(^[[:digit:]]+).*$|\1|')
 
 if [ -n "${DISTFILE_CACHE}" ]; then
-    export DISTCACHE=/distcache
-    if [ ${fetchorig} -eq 0 ]; then
-        _MSO='file:///distcache/${DIST_SUBDIR}/'
-        export MASTER_SITE_OVERRIDE="${_MSO} ${MASTER_SITE_OVERRIDE}"
-    fi
+    export DISTDIR=/distcache
 fi
 
 if [ -n "${DISTFILE_URI}" ]; then
@@ -294,7 +309,7 @@ if [ x"${CCACHE_ENABLED}" ]; then
     unset CCACHE_DISABLE
 fi
 
-_ldconfig_dirs="/lib /usr/lib /usr/lib/compat"
+_ldconfig_dirs="/usr/lib"
 ldconfig_dirs=""
 for i in ${_ldconfig_dirs}; do
     if [ -d ${chroot}/${i} ]; then
@@ -302,11 +317,8 @@ for i in ${_ldconfig_dirs}; do
     fi
 done
 chroot ${chroot} /sbin/ldconfig ${ldconfig_dirs}
-if [ ${ARCH} = "i386" ]; then
-    chroot ${chroot} /sbin/ldconfig -aout /usr/lib/aout /usr/lib/compat/aout
-fi
 
-set x $ED $FD $PD $BD $RD $TD
+set x $ED $FD $PD $BD $RD $TD $SD
 shift 1
 
 cd ${chroot}/tmp/depends
@@ -337,7 +349,7 @@ if [ $? -ne 0 ]; then
     exit 1
 fi
 
-chroot ${chroot} /buildscript ${dirname} 1 "$ED" "$PD" "$FD" "$BD" "$RD" "$TD" "${plistcheck}" 2>&1 | tee -a ${chroot}/tmp/${pkgname}.log
+chroot ${chroot} /buildscript ${dirname} 1 "$ED" "$PD" "$FD" "$BD" "$RD" "$TD" "$SD" "${plistcheck}" 2>&1 | tee -a ${chroot}/tmp/${pkgname}.log
 if [ -f ${chroot}/tmp/status ]; then
     error=$(cat ${chroot}/tmp/status)
 else
@@ -351,14 +363,7 @@ errorsDir=$(tinderLoc builderrors ${buil
 
 if [ "${error}" = "0" ]; then
     ln -sf ${pkgname}.log2 ${chroot}/tmp/make.log
-    # Cache the distfiles if requested.  We will wait a maximum of
-    # ten minutes before giving up on the lock.
-    if [ -n "${DISTFILE_CACHE}" ]; then
-	lockf -t 600 ${chroot}${DISTCACHE}/.lock tar -C ${chroot}/${DISTDIR} \
-	    -cf - . | tar --unlink -C ${chroot}${DISTCACHE} -xvf -
-    fi
-
-    chroot ${chroot} /usr/bin/nice -n $nice /buildscript ${dirname} 2  "$ED" "$PD" "$FD" "$BD" "$RD" "$TD" "${plistcheck}" > ${chroot}/tmp/${pkgname}.log2 2>&1
+    chroot ${chroot} /usr/bin/nice -n $nice /buildscript ${dirname} 2  "$ED" "$PD" "$FD" "$BD" "$RD" "$TD" "$SD" "${plistcheck}" > ${chroot}/tmp/${pkgname}.log2 2>&1
 
     grep pnohang ${chroot}/tmp/${pkgname}.log2
     cat ${chroot}/tmp/${pkgname}.log2 >> ${chroot}/tmp/${pkgname}.log
@@ -372,6 +377,7 @@ if [ "${error}" = "0" ]; then
         cp ${chroot}/tmp/${pkgname}.log ${logsDir}/${pkgname}.log
     fi
     if [ -n "${logdir}" ]; then
+        rm -f ${logdir}/${pkgname}.log${lext}
 	if [ ${docopy} -eq 1 ]; then
 	    cp ${logsDir}/${pkgname}.log${lext} ${logdir}/${pkgname}.log${lext}
 	else
@@ -388,6 +394,7 @@ if [ "${error}" = "0" ]; then
 	cp ${chroot}/tmp/work.tbz ${workDir}/${pkgname}.tbz
     fi
 
+    rm -f ${errorsDir}/${pkgname}.log*
     if [ "${error}" = "0" ]; then
         if [ ! -z "${last_version}" ]; then
 	    oldpkgs=$(find ${packages} -name "${last_version}${PKGSUFFIX}")
@@ -400,8 +407,8 @@ if [ "${error}" = "0" ]; then
 		tar --unlink -C ${packages} -xvf -
 	[ -f ${packages}/All/${pkgname}${PKGSUFFIX} ] && \
 		touch ${packages}/All/${pkgname}${PKGSUFFIX}
-	rm -f ${errorsDir}/${pkgname}.log*
-	if bzgrep -q "${pkgname} is marked as broken: " ${logsDir}/${pkgname}.log${lext} ; then
+	BROKE=`zgrep -q "${pkgname} is marked as broken: " ${logsDir}/${pkgname}.log${lext}`
+	if [ "${BROKE}" != "" ] ; then
 	    status="BROKEN"
 	elif [ -f ${chroot}/tmp/leftovers ]; then
 	    status="LEFTOVERS"
