$NetBSD$

--- ../FreeBSD/lib/Tinderbox/MakeCache.pm	2011-10-16 00:52:55.000000000 +0000
+++ lib/Tinderbox/MakeCache.pm
@@ -37,8 +37,9 @@ our @makeTargets = (
         'FETCH_DEPENDS',   'BUILD_DEPENDS',
         'LIB_DEPENDS',     'RUN_DEPENDS',
         'TEST_DEPENDS',    'MAINTAINER',
-        'COMMENT',         'PORTNAME',
-        'DISTFILES',
+        'COMMENT',         'PKGBASE',
+        'DISTFILES',       'BOOTSTRAP_DEPENDS',
+        'DEPENDS'
 );
 
 # Create a new cache object
@@ -60,13 +61,16 @@ sub _execMake {
         my $self = shift;
         my $port = shift;
         my @ret;
-        my $tmp;
+        my $target;
+        my $tmp = '';
 
         return if ($self->{SEEN}->{$port} eq 1);
 
-        $tmp = '-V ' . join(' -V ', @makeTargets);
+        foreach $target (@makeTargets) {
+                $tmp .= "-V '\${" . $target . "}' ";		
+        }
         my $dir = $self->{BASEDIR} . '/' . $port;
-        @ret = split("\n", `cd $dir && make $tmp`);
+        @ret = split("\n", `cd $dir && bmake $tmp`);
 
         foreach $tmp (@makeTargets) {
                 $self->{CACHE}->{$port}{$tmp} = shift @ret;
@@ -94,10 +98,11 @@ sub _getList {
         $self->_execMake($port);
         foreach my $dep (split(/\s+/, $self->{CACHE}->{$port}{$item})) {
                 my ($d, $ddir) = split(/:/, $dep);
-                if (!defined($ddir) || $item eq 'DEPENDS') {
+                if (!defined($ddir)) {
                         $ddir = $d;
                 }
                 $ddir =~ s|^$self->{BASEDIR}/||;
+                $ddir =~ s|^\.\.\/\.\.\/||;
                 if ($ddir) {
                         push @deps, $ddir;
                 }
@@ -109,7 +114,7 @@ sub _getList {
 sub Name {
         my $self = shift;
         my $port = shift;
-        return $self->_getVariable($port, 'PORTNAME');
+        return $self->_getVariable($port, 'PKGBASE');
 }
 
 # Package name
@@ -133,6 +138,20 @@ sub Maintainer {
         return $self->_getVariable($port, 'MAINTAINER');
 }
 
+# Bootstrap dependencies
+sub BootstrapDepends {
+        my $self = shift;
+        my $port = shift;
+        return $self->_getList($port, 'BOOTSTRAP_DEPENDS');
+}
+
+# Buildlink3 dependencies
+sub Buildlink3Depends {
+        my $self = shift;
+        my $port = shift;
+        return $self->_getList($port, 'DEPENDS');
+}
+
 # Extract dependencies
 sub ExtractDepends {
         my $self = shift;
@@ -206,6 +225,28 @@ sub FetchDependsList {
         return grep { !$uniq{$_}++ } @deps;
 }
 
+sub BootstrapDependsList {
+        my $self = shift;
+        my $port = shift;
+
+        my @deps;
+        push(@deps, $self->BootstrapDepends($port));
+
+        my %uniq;
+        return grep { !$uniq{$_}++ } @deps;
+}
+
+sub Buildlink3DependsList {
+        my $self = shift;
+        my $port = shift;
+
+        my @deps;
+        push(@deps, $self->Buildlink3Depends($port));
+
+        my %uniq;
+        return grep { !$uniq{$_}++ } @deps;
+}
+
 sub ExtractDependsList {
         my $self = shift;
         my $port = shift;
@@ -250,6 +291,7 @@ sub BuildDependsList {
         push(@deps, $self->FetchDepends($port));
         push(@deps, $self->BuildDepends($port));
         push(@deps, $self->LibDepends($port));
+        push(@deps, $self->Buildlink3Depends($port));
 
         my %uniq;
         return grep { !$uniq{$_}++ } @deps;
